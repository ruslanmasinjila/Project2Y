# -*- coding: utf-8 -*-
"""Combined Candles.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1PoM3vTX_Wgue31m8yTqGh7pJEszm2Ia3
"""

import pandas as pd
from datetime import datetime
import numpy as np
from itertools import groupby


df = pd.read_csv("EURUSD_RATES")

# Determine candle color
def get_candle_color(open, close):
    if close > open:
        return 'green'
    elif close < open:
        return 'red'
    else:
        return 'neutral'

df['color'] = df.apply(lambda row: get_candle_color(row['open'], row['close']), axis=1)

# Initialize merged dataframe
merged_candles = []

# Function to merge a sequence of candles
def merge_sequence(sequence, color):
    if color == 'red':
        new_open = max(sequence['open'])
        new_close = min(sequence['close'])
        new_high = max(sequence['high'])
        new_low = min(sequence['low'])
    elif color == 'green':
        new_open = min(sequence['open'])
        new_close = max(sequence['close'])
        new_high = max(sequence['high'])
        new_low = min(sequence['low'])
    else:  # neutral
        new_open = min(sequence['open'])
        new_close = max(sequence['close'])
        new_high = max(sequence['high'])
        new_low = min(sequence['low'])

    first_datetime = sequence['time'].iloc[0]  # Keep the datetime of the first candle
    merged_candles.append({
        'time': first_datetime,  # Save the datetime of the first candle in the sequence
        'open': new_open,
        'close': new_close,
        'high': new_high,
        'low': new_low,
        'color': color
    })

# Iterate over the dataframe and merge consecutive candles of the same color
current_sequence = []
current_color = None

for idx, row in df.iterrows():
    if row['color'] == current_color:
        current_sequence.append(row)
    else:
        if current_sequence:
            # Merge the previous sequence before starting a new one
            merge_sequence(pd.DataFrame(current_sequence), current_color)
        current_sequence = [row]
        current_color = row['color']

# Merge the last sequence
if current_sequence:
    merge_sequence(pd.DataFrame(current_sequence), current_color)

# Convert merged candles to a new dataframe
merged_df = pd.DataFrame(merged_candles)
merged_df